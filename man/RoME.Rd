% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RoME.R
\name{RoME}
\alias{RoME}
\title{Robust optimal reconciliation for hierarchical time series forecasting}
\usage{
RoME(
  base,
  hierarchy,
  loss.diff,
  design.W = "OLS",
  matrix.W = NULL,
  lambda.shrink = NULL,
  varsigma = 0,
  tau = 1e-16,
  threshold.convergence = 1e-04,
  limit.iteration = 1000
)
}
\arguments{
\item{base}{The value of base forecasts.}

\item{hierarchy}{The hierarchy structure of \code{hts}.}

\item{loss.diff}{Type of loss function.}

\item{design.W}{The alternative designs for the covariance matrix of base forecast errors.}

\item{matrix.W}{The covariance matrix of first-step-ahead base forecasts of error term.}

\item{lambda.shrink}{Shrink parameter for the shrink covariance design.}

\item{threshold.convergence}{The convergence threshold, the default set is 1e-4.}

\item{limit.iteration}{The limit iteration times, the default set is 1000.}

\item{...}{Other arguments.}
}
\value{
A list object, which is basically a list consisting of:
\item{RoME}{the forecast result of RoME method}
\item{time}{the computation time of RoME}
\item{call}{a \code{list} object contains arguments for RoME algorithm}
}
\description{
The RoME model for HTS forecasting. Return the forecast result and computation time.
}
\examples{

Generate_NonGaussianSeries(type.epsilon = 'Mixture',times.repeat = 1)
data <- read.table('NonGaussianSeries_epsilon_Mixture_y.txt')
hierarchy <- rbind(rep(1, 9), c(rep(1, 3), rep(0, 6)), c(rep(0, 3), rep(1, 3), rep(0, 3)), c(rep(0, 6), rep(1, 3)), diag(1, 9))
data.train <- as.matrix(data[1:180, ]) \%*\% t(hierarchy)
sol.base <- BaseAuto(data.all, term = 12)
W <- t(sol.base$residual) \%*\% sol.base$residual / 180
lambda <- LambdaShrink(sol.base$residual)

# forecast with RoME
sol.RoME <- list()
sol.RoME[[1]] <- RoME(base = sol.base$base, hierarchy = hierarchy, loss.diff = DiffLoss(type = 'LS'))
sol.RoME[[2]] <- RoME(base = sol.base$base, hierarchy = hierarchy, loss.diff = DiffLoss(type = 'LS'), design.W = 'WLSv', matrix.W = W)
sol.RoME[[3]] <- RoME(base = sol.base$base, hierarchy = hierarchy, loss.diff = DiffLoss(type = 'LS'), design.W = 'WLSs', matrix.W = W)
sol.RoME[[4]] <- RoME(base = sol.base$base, hierarchy = hierarchy, loss.diff = DiffLoss(type = 'LS'), design.W = 'Sample', matrix.W = W, varsigma = 0)
sol.RoME[[5]] <- RoME(base = sol.base$base, hierarchy = hierarchy, loss.diff = DiffLoss(type = 'LS'), design.W = 'Shrink', matrix.W = W, varsigma = 0, lambda.shrink = lambda)

}
